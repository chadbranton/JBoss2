@model JBOFarmersMkt.Models.Supplier

@{
    ViewBag.Title = "Create";
}

<section class="createSupplier">
    <div class="row">
        <header class="col-xs-12 page-header"><h1>@ViewBag.Title <small>Adding a new supplier</small></h1></header>
    </div>

    <div class="row">
        <div class="col-sm-12">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                <div class="form-group">
                    @Html.LabelFor(model => model.name, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(model => model.name, new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.name) })
                        @Html.ValidationMessageFor(model => model.name)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.address, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(model => model.address, new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.address) })
                        @Html.ValidationMessageFor(model => model.address)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.city, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(model => model.city, new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.city) })
                        @Html.ValidationMessageFor(model => model.city)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.state, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(model => model.state, new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.state) })
                        @Html.ValidationMessageFor(model => model.state)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.phone, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(model => model.phone, new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.phone) })
                        @Html.ValidationMessageFor(model => model.phone)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.email, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(model => model.email, new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.email) })
                        @Html.ValidationMessageFor(model => model.email)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-4 col-sm-offset-4">
                        <input type="submit" value="Create" class="btn btn-primary" />
                        @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
                    </div>
                </div>
            }
        </div>
    </div>
</section>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
